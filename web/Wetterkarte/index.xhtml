<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    
<h:head>
<title>Wetterkarte</title>
<script src="http://www.openlayers.org/api/OpenLayers.js"></script>
</h:head>
<h:body>
<h3>Wetterkarte</h3>
<div id="mapdiv" style="height:60%"></div>
<script>

var lat=#{Wetterdaten.lat};
var lon=#{Wetterdaten.lon};
map = new OpenLayers.Map("mapdiv");
map.addLayer(new OpenLayers.Layer.OSM());
epsg4326 = new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)

//var lonLat = new OpenLayers.LonLat(16.65271, 43.154188).transform(epsg4326, projectTo);
var lonLat = new OpenLayers.LonLat(lon, lat).transform(epsg4326, projectTo);

var zoom = 7;
map.setCenter(lonLat, zoom);

//Punkt erzeugen mit Circle
var vectorLayer = new OpenLayers.Layer.Vector("Overlay");

var point = new OpenLayers.Geometry.Point(lonLat.lon, lonLat.lat);


var mycircle = OpenLayers.Geometry.Polygon.createRegularPolygon
(
    point,
    50000,
    40,
    0
);
var mycircleOutCircle = OpenLayers.Geometry.Polygon.createRegularPolygon
(
    point,
    80000,
    60,
    0
);

var featurecircle = new OpenLayers.Feature.Vector(mycircle,
{ description: 'info'},
    { fillOpacity: '0.2'}
            );
var featurecircleOut = new OpenLayers.Feature.Vector(mycircleOutCircle,
{ description: 'info'},
    { fillOpacity: '0.1'}
            );
    

var featurePoint = new OpenLayers.Feature.Vector(
    point,
    { description: 'info' },
    { externalGraphic: 'tief.png', graphicHeight: 35, graphicWidth: 35, graphicXOffset: -12, graphicYOffset: -25 }
);
vectorLayer.addFeatures([featurePoint, featurecircle]);
vectorLayer.addFeatures([featurePoint, featurecircleOut]);

//Punkt 2
var lat2=#{Wetterdaten.lat}-1.3;
var lon2=#{Wetterdaten.lon}-0.8;
var vectorLayer2 = new OpenLayers.Layer.Vector("Overlay");
//var lonLat2 = new OpenLayers.LonLat(16.25271, 42.154188).transform(epsg4326, projectTo);
var lonLat2 = new OpenLayers.LonLat(lon2, lat2).transform(epsg4326, projectTo);


var point2 = new OpenLayers.Geometry.Point(lonLat2.lon, lonLat2.lat);


var mycircle2 = OpenLayers.Geometry.Polygon.createRegularPolygon
(
    point2,
    50000,
    40,
    0
);

var featurecircle2 = new OpenLayers.Feature.Vector(mycircle2,
        { description: 'info'},
    { fillOpacity: '0.1'}
            );



var featurePoint2 = new OpenLayers.Feature.Vector(
    point2,
    { description: 'info'},
    { externalGraphic: 'tief.png', graphicHeight: 35, graphicWidth: 35, graphicXOffset: -12, graphicYOffset: -25}
    
);
vectorLayer2.addFeatures([featurePoint2, featurecircle2]);


map.addLayer(vectorLayer);
map.addLayer(vectorLayer2);


</script>

  
  
        <p:panelGrid columns="2">
            <h:outputText value="Temperatur:" />
            <h:inputText disabled="true" value="#{ManagedBean.temperatur}" />
            <h:outputText value="mmHg:" />
            <h:inputText  disabled="true" value="#{ManagedBean.luftdruck}"/>
            <!--<h:outputText value="&#916;mmHg   ZSM:" />
            <h:inputText  disabled="true" value="#{ManagedBean.ZSMLuftdruck}"/>
            <h:outputText value="STD:" />
            <h:inputText  disabled="true" value="#{ManagedBean.STD}"/>-->
            
            
        </p:panelGrid>
</h:body>
</html>